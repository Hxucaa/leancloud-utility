{
  "parser": "babel-eslint",
  "ecmaFeatures": {
    "arrowFunctions": true,
    "blockBindings": true,
    "classes": true,
    "defaultParams": true,
    "destructuring": true,
    "forOf": true,
    "generators": false,
    "modules": true,
    "objectLiteralComputedProperties": true,
    "objectLiteralDuplicateProperties": false,
    "objectLiteralShorthandMethods": true,
    "objectLiteralShorthandProperties": true,
    "restParams": true,
    "spread": true,
    "superInFunctions": true,
    "templateStrings": true
  },
  "env": {
    "es6": true,
    "node": true
  },
  "extends": "eslint:recommended",
  "plugins": [
    "import"
  ],
  "rules": {
    "no-console": 0,
    "valid-jsdoc": 2,                // Ensure JSDoc comments are valid (off by default)

    // Best Practices
    // These are rules designed to prevent you from making mistakes. They either prescribe a better way of doing something or help you avoid footguns.
    "accessor-pairs": [2, {"getWithoutSet": true}],
    "block-scoped-var": 2,           // treat var statements as if they were block scoped (off by default)
    "complexity": [1, 7],               // specify the maximum cyclomatic complexity allowed in a program (off by default)
    "consistent-return": 2,          // require return statements to either always or never specify values
    "curly": 2,                      // specify curly brace conventions for all control statements
    "default-case": 2,               // require default case in switch statements (off by default)
    "dot-location": [2, "property"],
    "dot-notation": [2, { "allowKeywords": true}],               // encourages use of dot notation whenever possible
    "eqeqeq": 2,                     // require the use of === and !==
    "guard-for-in": 2,               // make sure for-in loops have an if statement (off by default)
    "no-alert": 2,                   // disallow the use of alert, confirm, and prompt
    "no-caller": 2,                  // disallow use of arguments.caller or arguments.callee
    "no-case-declarations": 2,
    "no-div-regex": 0,               // disallow division operators explicitly at beginning of regular expression (off by default)
    "no-else-return": 2,             // disallow else after a return in an if (off by default)
    "no-empty-label": 2,             // disallow use of labels for anything other then loops and switches
    "no-empty-pattern": 2,
    "no-eq-null": 2,                 // disallow comparisons to null without a type-checking operator (off by default)
    "no-eval": 2,                    // disallow use of eval()
    "no-extend-native": 2,           // disallow adding to native types
    "no-extra-bind": 2,              // disallow unnecessary function binding
    "no-fallthrough": 2,             // disallow fallthrough of case statements
    "no-floating-decimal": 2,        // disallow the use of leading or trailing decimal points in numeric literals (off by default)
    "no-implicit-coercion": 2,
    "no-implied-eval": 2,            // disallow use of eval()-like methods
    "no-invalid-this": 1,
    "no-labels": 2,                  // disallow use of labeled statements
    "no-iterator": 2,                // disallow usage of __iterator__ property
    "no-lone-blocks": 2,             // disallow unnecessary nested blocks
    "no-loop-func": 2,               // disallow creation of functions within loops
    "no-magic-numbers": 0,
    "no-multi-spaces": [2, { "exceptions": { "ImportDeclaration": true } }],
    "no-multi-str": 2,               // disallow use of multiline strings
    "no-native-reassign": 2,         // disallow reassignments of native objects
    "no-new": 2,                     // disallow use of new operator when not part of the assignment or comparison
    "no-new-func": 2,                // disallow use of new operator for Function object
    "no-new-wrappers": 2,            // disallows creating new instances of String,Number, and Boolean
    "no-octal": 2,                   // disallow use of octal literals
    "no-octal-escape": 2,            // disallow use of octal escape sequences in string literals, such as var foo = "Copyright \251";
    "no-param-reassign": [2, { "props": false }],
    "no-process-env": 0,
    "no-proto": 2,                   // disallow usage of __proto__ property
    "no-redeclare": 2,               // disallow declaring the same variable more then once
    "no-return-assign": 2,           // disallow use of assignment in return statement
    "no-script-url": 2,              // disallow use of javascript: urls.
    "no-self-compare": 2,            // disallow comparisons where both sides are exactly the same (off by default)
    "no-sequences": 2,               // disallow use of comma operator
    "no-throw-literal": 2,
    "no-unused-expressions": [2, { "allowShortCircuit": true, "allowTernary": true }],      // disallow usage of expressions in statement position
    "no-useless-call": 1,
    "no-useless-concat": 2,
    "no-void": 1,                    // disallow use of void operator (off by default)
    "no-warning-comments": 0,        // disallow usage of configurable warning terms in comments": 1,                        // e.g. TODO or FIXME (off by default)
    "no-with": 2,                    // disallow use of the with statement
    "radix": 2,                      // require use of the second argument for parseInt() (off by default)
    "vars-on-top": 0,                // requires to declare all vars on top of their containing scope (off by default)
    "wrap-iife": [2, "any"],                  // require immediate function invocation to be wrapped in parentheses (off by default)
    "yoda": 2,                       // require or disallow Yoda conditions

    // Stylistic Issues
    // These rules are purely matters of style and are quite subjective.
    "array-bracket-spacing": [2, "never"],
    "block-spacing": [2, "always"],
    "brace-style": [2, "stroustrup", { "allowSingleLine": true }],
    "camelcase": [2, {"properties": "always"}],
    "comma-spacing": [2, {"before": false, "after": true}],
    "comma-style": [2, "last"],
    "computed-property-spacing": [2, "always"],
    "eol-last": 2,                   // enforce newline at the end of file, with no multiple empty lines
    "indent": [2, 2],
    "key-spacing": [2, {"beforeColon": false, "afterColon": true}],
    "linebreak-style": [2, "unix"],
    "max-depth": [1, 4],
    "max-len": [2, 100, 4, {"ignoreComments": true, "ignoreUrls": true, "ignorePattern": "^\\s*var\\s.+=\\s*require\\s*\\("}],
    "max-nested-callbacks": [1, 3],
    "max-params": [1, 4],
    "max-statements": [1, 20],
    // require a capital letter for constructors
    "new-cap": [2, {"newIsCap": true}],
    "new-parens": 2,
    "newline-after-var": [2, "always"],
    "no-array-constructor": 2,
    "no-bitwise": 0,
    "no-continue": 2,
    "no-mixed-spaces-and-tabs": [2, "smart-tabs"],
    "no-multiple-empty-lines": [2, {"max": 3, "maxEOF": 1}],
    "no-nested-ternary": 2,
    "no-new-object": 2,
    "no-restricted-syntax": [2, "WithStatement"],
    "no-spaced-func": 2,
    "no-trailing-spaces": [2, { "skipBlankLines": true }],
    "no-unneeded-ternary": [2, {"defaultAssignment": true }],
    "object-curly-spacing": [2, "always"],
    // allow just one var statement per function
    "one-var": [2, "never"],
    "operator-linebreak": [2, "after"],
    "quotes": [2, "double", "avoid-escape"],
    "semi": [2, "always"],
    "space-after-keywords": [2, "always"],
    "space-before-blocks": [2, "always"],
    "space-before-function-paren": [2, "never"],
    "space-before-keywords": [2, "always"],
    "space-infix-ops": [2, {"int32Hint": true}],
    "space-return-throw-case": 2,
    "space-unary-ops": 2,
    "wrap-regex": 2,

    // ECMAScript 6
    "prefer-arrow-callback": 2,
    "no-this-before-super": 1,
    "arrow-spacing": 2,
    "arrow-parens": 0,
    "constructor-super": 2,
    // require let or const instead of var
    "no-var": 2,
    "no-arrow-condition": 2,
    "no-class-assign": 2,
    // disallow modifying variables that are declared using const
    "no-const-assign": 2,
    "no-dupe-class-members": 2,
    "object-shorthand": 2,
    "prefer-const": 2,
    "prefer-reflect": 1,
    "prefer-spread": 1,
    "prefer-template": 2,

    // Strict Mode
    // list: https://github.com/eslint/eslint/tree/master/docs/rules#strict-mode
    // 'use strict' on top
//    "strict": [2, "global"],


    // Variables
    // These rules have to do with variable declarations.
    "init-declarations": [2, "always"],
    "no-catch-shadow": 2,            // disallow the catch clause parameter name being the same as a variable in the outer scope (off by default in the node environment)
    "no-delete-var": 2,              // disallow deletion of variables
    "no-label-var": 2,               // disallow labels that share a name with a variable
    "no-shadow": [2, {"allow": ["done", "resolve", "reject", "cb"]}],                  // disallow declaration of variables already declared in the outer scope
    "no-shadow-restricted-names": 2, // disallow shadowing of names such as arguments
    "no-undef": [2, { "typeof": true }],                   // disallow use of undeclared variables unless mentioned in a /*global */ block
    "no-undefined": 0,               // disallow use of undefined variable (off by default)
    "no-undef-init": 2,              // disallow use of undefined when initializing variables
    "no-unused-vars": [2, {"vars": "all", "args": "none"}], // disallow declaration of variables that are not used in the code
    "no-use-before-define": [2, "nofunc"],       // disallow use of variables before they are defined

    // Node.js
    // These rules are specific to JavaScript running on Node.js.

    "handle-callback-err": 2,        // enforces error handling in callbacks (off by default) (on by default in the node environment)
    "no-mixed-requires": 2,          // disallow mixing regular variable and require declarations (off by default) (on by default in the node environment)
    "no-new-require": 2,             // disallow use of new operator with the require function (off by default) (on by default in the node environment)
    "no-path-concat": 2,             // disallow string concatenation with __dirname and __filename (off by default) (on by default in the node environment)
    "no-process-exit": 2,            // disallow process.exit() (on by default in the node environment)
    "no-restricted-modules": 1,      // restrict usage of specified node modules (off by default)
    "no-sync": 2,                    // disallow use of synchronous methods (off by default)


    // eslint-plugin-import
//    "import/no-unresolved": [2, {"commonjs": true}],
    "import/named": 0,
    "import/default": 0,
    "import/namespace": 0,
    "import/no-require": 2,
    "import/no-named-as-default": 0,
    "import/export": 2,
    "import/no-duplicates": 2,
    "import/imports-first": 0
  }
}